grammar = {
        "Program": ["PreprocessorList GlobalDeclarationList"],
        "PreprocessorList": ["PreprocessorDirective PreprocessorList", "ε"],
        "PreprocessorDirective": ["PREPROCESSOR LESS_THAN ID DOT ID GREATER_THAN"],
        "GlobalDeclarationList": ["GlobalDeclaration GlobalDeclarationList", "ε"],
        "GlobalDeclaration": ["TypeDec VarDec FunctionDec"],
        "Statement": ["ID StatementRest", "IfStatement", "WhileStatement", "CoutStatement", "BlockStatement"],
        "StatementRest": ["EQUALS Expression SEMICOLON", "DOT ID EQUALS Expression SEMICOLON", "ID SEMICOLON"],
        "IfStatement": ["if PAREN_L Expression PAREN_R Statement IfStatementRest"],
        "IfStatementRest": ["else Statement", "ε"],
        "WhileStatement": ["WHILE PAREN_L Expression PAREN_R Statement"],
        "CoutStatement": ["COUT LESS_THAN LESS_THAN Expression CoutRest SEMICOLON"],
        "CoutRest": ["LESS_THAN LESS_THAN ENDL", "ε"],
        "BlockStatement": ["BRACE_L StatementList BRACE_R"],
        "StatementList": ["Statement StatementList", "ε"],
        "TypeDec": ["STRUCT ID BRACE_L VarDecList BRACE_R SEMICOLON"],
        "VarDec": ["Type ID VarDecRest SEMICOLON"],
        "VarDecRest": ["EQUALS Expression", "ε"],
        "VarDecList": ["VarDec VarDecList", "ε"],
        "Type": ["INT", "FLOAT", "CHAR"],
        "FunctionDec": ["Type ID PAREN_L FormalList PAREN_R BRACE_L VarDecList StatementList RETURN Expression SEMICOLON BRACE_R"],
        "Expression": ["LogicalOrExpression"],
        "LogicalOrExpression": ["LogicalAndExpression MoreLogicalOr"],
        "MoreLogicalOr": ["OR LogicalAndExpression MoreLogicalOr", "ε"],
        "LogicalAndExpression": ["EqualityExpression MoreLogicalAnd"],
        "MoreLogicalAnd": ["AND EqualityExpression MoreLogicalAnd", "ε"],
        "EqualityExpression": ["RelationalExpression MoreEquality"],
        "MoreEquality": ["EqualityOperator RelationalExpression MoreEquality", "ε"],
        "EqualityOperator": ["EQUAL_EQUAL", "NOT_EQUAL"],
        "RelationalExpression": ["AdditiveExpression MoreRelational"],
        "MoreRelational": ["RelationalOperator AdditiveExpression MoreRelational", "ε"],
        "RelationalOperator": ["LESS_THAN", "GREATER_THAN", "LESS_THAN_EQUAL", "GREATER_THAN_EQUAL"],
        "AdditiveExpression": ["Term MoreAdditive"],
        "MoreAdditive": ["AdditiveOperator Term MoreAdditive", "ε"],
        "AdditiveOperator": ["PLUS", "MINUS"],
        "Term": ["Factor MoreMultiplicative"],
        "MoreMultiplicative": ["MultiplicativeOperator Factor MoreMultiplicative", "ε"],
        "MultiplicativeOperator": ["PRODUCT", "DIVISION"],
        "Factor": ["ID FactorRest"],
        "FactorRest": ["DOT ID", "PAREN_L ExpList PAREN_R", "ε"],
        "ExpList": ["Expression ExpRest", "ε"],
        "ExpRest": ["COMMA Expression ExpRest", "ε"],
        "FormalList": ["Parameter FormalRest", "ε"],
        "FormalRest": ["COMMA Parameter FormalRest", "ε"],
        "Parameter": ["Type ID"]
    }